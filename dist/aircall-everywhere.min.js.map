{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/maksimkorsikov/Projects/aircall-everywhere/src/javascripts/aircallPhone.js","webpack:////Users/maksimkorsikov/Projects/aircall-everywhere/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","AircallPhone","_this","this","opts","arguments","length","undefined","_classCallCheck","phoneWindow","integrationSettings","userSettings","eventsRegistered","phoneLoginState","phoneUrl","test","domToLoadPhone","integrationToLoad","onLogin","data","user","keys","settings","onLogout","w","window","_messageListener","_createPhoneIframe","document","querySelector","innerHTML","getUrlToLoad","e","console","error","_this2","addEventListener","event","info","_resetData","eventName","_handleInitMessage","source","origin","postMessage","callback","Error","code","message","_this3","_handleSendError","responseTimeout","on","response","removeListener","clearTimeout","success","errorCode","errorMessage","setTimeout","_this4","filter","forEach","send","_src_javascripts_aircallPhone_js__WEBPACK_IMPORTED_MODULE_0___default","a"],"mappings":"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","file":"aircall-everywhere.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","class AircallPhone {\n  constructor(opts = {}) {\n    // internal vars\n    // window object of loaded aircall phone\n    this.phoneWindow = null;\n    this.integrationSettings = {};\n    this.userSettings = {};\n    this.eventsRegistered = {};\n\n    this.phoneLoginState = false;\n\n    const URL_REGEX = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi;\n\n    // options passed\n    this.phoneUrl =\n      opts.phoneUrl !== undefined && URL_REGEX.test(opts.phoneUrl) === true\n        ? opts.phoneUrl\n        : 'https://phone.aircall.io';\n    this.domToLoadPhone = opts.domToLoadPhone;\n    this.integrationToLoad = opts.integrationToLoad;\n\n    this.onLogin = () => {\n      if (typeof opts.onLogin === 'function' && this.phoneLoginState === false) {\n        this.phoneLoginState = true;\n        const data = {\n          user: this.userSettings\n        };\n        if (Object.keys(this.integrationSettings).length > 0) {\n          data.settings = this.integrationSettings;\n        }\n        opts.onLogin(data);\n      }\n    };\n\n    this.onLogout = () => {\n      if (typeof opts.onLogout === 'function') {\n        opts.onLogout();\n      }\n    };\n    // local window\n    this.w = opts.window || window;\n\n    // launch postmessage listener\n    this._messageListener();\n\n    // load phone in specified dom\n    if (!!this.domToLoadPhone) {\n      this._createPhoneIframe();\n    }\n  }\n\n  _resetData() {\n    this.phoneWindow = null;\n    this.integrationSettings = {};\n    this.userSettings = {};\n    this.phoneLoginState = false;\n  }\n\n  _createPhoneIframe() {\n    // we get the passed dom\n    try {\n      const el = document.querySelector(this.domToLoadPhone);\n      el.innerHTML = `<iframe allow=\"microphone; autoplay\" src=\"${this.getUrlToLoad()}\" style=\"height:666px; width:376px;\"></iframe>`;\n    } catch (e) {\n      // couldnt query the dom wanted\n      console.error(\n        `[AircallEverywhere] [iframe creation] ${this.domToLoadPhone} not be found. Error:`,\n        e\n      );\n    }\n  }\n\n  _messageListener() {\n    this.w.addEventListener(\n      'message',\n      event => {\n        console.info('[AircallEverywhere] [event listener] received event', event);\n        // we test if our format object is present. if not, we stop\n        const matchPrefixRegex = /^apm_phone_/;\n        if (!event.data || !event.data.name || !matchPrefixRegex.test(event.data.name)) {\n          return false;\n        }\n\n        // initialisation message\n        if (event.data.name === 'apm_phone_loaded') {\n          this._handleInitMessage(event);\n          return;\n        }\n\n        // integration settings sent by phone\n        if (event.data.name === 'apm_phone_integration_settings' && !!event.data.value) {\n          this.integrationSettings = event.data.value;\n          // init callback after settings received\n          this.onLogin();\n          return;\n        }\n\n        // phone logout\n        if (event.data.name === 'apm_phone_logout') {\n          // we clean data related to user\n          this._resetData();\n          this.onLogout();\n          return;\n        }\n\n        // loop over events registered\n        for (const eventName in this.eventsRegistered) {\n          if (event.data.name === `apm_phone_${eventName}`) {\n            // event triggered => we execute callback\n            this.eventsRegistered[eventName](event.data.value);\n          }\n        }\n      },\n      false\n    );\n  }\n\n  _handleInitMessage(event) {\n    // we keep the source\n    this.phoneWindow = {\n      source: event.source,\n      origin: event.origin\n    };\n\n    if (!!event.data.value) {\n      this.userSettings = event.data.value;\n    }\n\n    // we answer init\n    this.phoneWindow.source.postMessage({ name: 'apm_app_isready' }, this.phoneWindow.origin);\n\n    // we ask for integration settings\n    if (!!this.integrationToLoad) {\n      this.phoneWindow.source.postMessage(\n        { name: 'apm_app_get_settings', value: this.integrationToLoad },\n        this.phoneWindow.origin\n      );\n    } else {\n      // init callback now if present\n      this.onLogin();\n    }\n  }\n\n  getUrlToLoad() {\n    return `${this.phoneUrl}?integration=generic`;\n  }\n\n  on(eventName, callback) {\n    if (!eventName || typeof callback !== 'function') {\n      throw new Error(\n        '[AircallEverywhere] [on function] Invalid parameters format. Expected non empty string and function'\n      );\n    }\n    this.eventsRegistered[eventName] = callback;\n  }\n\n  _handleSendError(error, callback) {\n    if (!error || !error.code) {\n      // should not happen, unknown error\n      error = {\n        code: 'unknown_error'\n      };\n    }\n    // errors sent by the phone for specific events are not handled since they should have their code AND message\n    if (!!error && !error.message) {\n      switch (error.code) {\n        case 'unknown_error':\n          error.message = 'Unknown error. Contact aircall developers dev@aircall.io';\n          break;\n        case 'no_event_name':\n          error.message = 'Invalid parameter eventName. Expected an non empty string';\n          break;\n        case 'not_ready':\n          error.message =\n            'Aircall Phone has not been identified yet or is not ready. Wait for \"onLogin\" callback';\n          break;\n        case 'no_answer':\n          error.message = 'No answer from the phone. Check if the phone is logged in';\n          break;\n        case 'invalid_response':\n          error.message =\n            'Invalid response from the phone. Contact aircall developers dev@aircall.io';\n          break;\n        default:\n          // specific error without a message. Should not happen\n          error.message = 'Generic error message';\n          break;\n      }\n    }\n\n    // we log the error\n    console.error(`[AircallEverywhere] [send function] ${error.message}`);\n\n    // we send the callback with the error\n    if (typeof callback === 'function') {\n      callback(false, error);\n    }\n  }\n\n  send(eventName, data, callback) {\n    if (typeof data === 'function' && !callback) {\n      callback = data;\n      data = undefined;\n    }\n\n    if (!eventName) {\n      this._handleSendError({ code: 'no_event_name' }, callback);\n      return false;\n    }\n\n    if (!!this.phoneWindow && !!this.phoneWindow.source) {\n      let responseTimeout = null;\n      let timeoutLimit = 500;\n\n      // we send the message\n      this.phoneWindow.source.postMessage(\n        { name: `apm_app_${eventName}`, value: data },\n        this.phoneWindow.origin\n      );\n\n      // we wait for a response to this message\n      this.on(`${eventName}_response`, response => {\n        // we have a response, we remove listener and return the callback\n        this.removeListener(`${eventName}_response`);\n        clearTimeout(responseTimeout);\n        // we evaluate response\n        if (!!response && response.success === false) {\n          // phone answers with an error\n          this._handleSendError(\n            { code: response.errorCode, message: response.errorMessage },\n            callback\n          );\n        } else if (!!response && response.success === true) {\n          // phone answer a succes with its response\n          if (typeof callback === 'function') {\n            callback(true, response.data);\n          }\n        } else {\n          // phone answer is invalid\n          this._handleSendError({ code: 'invalid_response' }, callback);\n        }\n      });\n\n      responseTimeout = setTimeout(() => {\n        // if no response, we remove listener\n        this.removeListener(`${eventName}_response`);\n\n        this._handleSendError({ code: 'no_answer' }, callback);\n      }, timeoutLimit);\n    } else {\n      this._handleSendError({ code: 'not_ready' }, callback);\n      return false;\n    }\n  }\n\n  removeListener(eventName) {\n    if (!this.eventsRegistered[eventName]) {\n      return false;\n    }\n\n    Object.keys(this.eventsRegistered)\n      .filter(key => key === eventName)\n      .forEach(key => delete this.eventsRegistered[key]);\n    return true;\n  }\n\n  isLoggedIn(callback) {\n    // we simply send an event and send its result.\n    this.send('is_logged_in', success => {\n      callback(success);\n    });\n  }\n}\n\nexport default AircallPhone;\n","import AircallPhone from './src/javascripts/aircallPhone.js';\n\nwindow.AircallPhone = AircallPhone;\n"],"sourceRoot":""}